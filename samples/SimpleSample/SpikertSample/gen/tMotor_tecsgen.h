/*
 * This file was automatically generated by tecsgen.
 * This file is not intended to be edited.
 */
#ifndef tMotor_TECSGEN_H
#define tMotor_TECSGEN_H

/*
 * celltype          :  tMotor
 * global name       :  tMotor
 * multi-domain      :  no
 * idx_is_id(actual) :  no(no)
 * singleton         :  no
 * has_CB            :  yes
 * has_INIB          :  yes
 * rom               :  yes
 * CB initializer    :  yes
 */

/* global header #_IGH_# */
#include "global_tecsgen.h"

/* signature header #_ISH_# */
#include "sPowerdown_tecsgen.h"
#include "sMotor_tecsgen.h"

#ifndef TOPPERS_MACRO_ONLY

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* cell INIB type definition #_CIP_# */
typedef const struct tag_tMotor_INIB {
    /* call port #_TCP_# */
    /* call port #_NEP_# */ 
    /* attribute(RO) #_ATO_# */ 
    pbio_port_id_t port;
}  tMotor_INIB;
/* cell CB type definition #_CCTPA_# */
typedef struct tag_tMotor_CB {
    tMotor_INIB  *_inib;
    /* call port #_TCP_# */
    /* call port #_NEP_# */ 
    /* var #_VA_# */ 
    Option_Ref_a_mut__pup_motor_t__ motor;
}  tMotor_CB;
/* singleton cell CB prototype declaration #_MCPB_# */
extern tMotor_CB  tMotor_CB_tab[];

/* celltype IDX type #_CTIX_# */
typedef struct tag_tMotor_CB *tMotor_IDX;

/* prototype declaration of entry port function #_EPP_# */
/* sMotor */
Inline void         tMotor_eMotor_set_motor_ref(tMotor_IDX idx);
Inline void         tMotor_eMotor_setup(tMotor_IDX idx, pup_direction_t positive_direction, bool reset_count);
Inline void         tMotor_eMotor_set_speed(tMotor_IDX idx, int32_t speed);
Inline void         tMotor_eMotor_stop(tMotor_IDX idx);
#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TOPPERS_MACRO_ONLY */

/* to get the definition of CB type of referenced celltype for optimization #_ICT_# */
#ifndef  TOPPERS_CB_TYPE_ONLY
#define  tMotor_CB_TYPE_ONLY
#define TOPPERS_CB_TYPE_ONLY
#endif  /* TOPPERS_CB_TYPE_ONLY */
#include "tPowerdown_tecsgen.h"
#ifdef  tMotor_CB_TYPE_ONLY
#undef TOPPERS_CB_TYPE_ONLY
#endif /* tMotor_CB_TYPE_ONLY */
#define tMotor_ID_BASE              (1)  /* ID Base  #_NIDB_# */
#define tMotor_N_CELL               (1)  /*  number of cells  #_NCEL_# */

/* IDX validation macro #_CVI_# */
#define tMotor_VALID_IDX(IDX) (1)


/* celll CB macro #_GCB_# */
#define tMotor_GET_CELLCB(idx) (idx)

/* attr access  #_AAM_# */
#define tMotor_ATTR_port( p_that )	((p_that)->_inib->port)

#define tMotor_GET_port(p_that)	((p_that)->_inib->port)


/* var access macro #_VAM_# */
#define tMotor_VAR_motor(p_that)	((p_that)->motor)

#define tMotor_GET_motor(p_that)	((p_that)->motor)
#define tMotor_SET_motor(p_that,val)	((p_that)->motor=(val))

#ifndef TECSFLOW
 /* call port function macro #_CPM_# */
#define tMotor_cPowerdown_powerdown( p_that, error ) \
	  tPowerdown_ePowerdown1_powerdown( \
	   (tPowerdown_IDX)0, (error) )

#else  /* TECSFLOW */
#define tMotor_cPowerdown_powerdown( p_that, error ) \
	  (p_that)->cPowerdown.powerdown__T( \
 (error) )

#endif /* TECSFLOW */
#ifndef TOPPERS_MACRO_ONLY

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/* prototype declaration of entry port function (referenced when VMT useless optimise enabled) #_EPSP_# */

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TOPPERS_MACRO_ONLY */

/* IDX validation macro (abbrev.) #_CVIA_# */
#define VALID_IDX(IDX)  tMotor_VALID_IDX(IDX)


/* cell CB macro (abbrev) #_GCBA_# */
#define GET_CELLCB(idx)  tMotor_GET_CELLCB(idx)

/* CELLCB type (abbrev) #_CCT_# */
#define CELLCB	tMotor_CB

/* celltype IDX type (abbrev) #_CTIXA_# */
#define CELLIDX	tMotor_IDX


/* attr access macro (abbrev) #_AAMA_# */
#define ATTR_port            tMotor_ATTR_port( p_cellcb )


/* var access macro (abbrev) #_VAMA_# */
#define VAR_motor            tMotor_VAR_motor( p_cellcb )

/* call port function macro (abbrev) #_CPMA_# */
#define cPowerdown_powerdown( error ) \
          ((void)p_cellcb, tMotor_cPowerdown_powerdown( p_cellcb, error ))




/* entry port function macro (abbrev) #_EPM_# */
#define eMotor_set_motor_ref tMotor_eMotor_set_motor_ref
#define eMotor_setup     tMotor_eMotor_setup
#define eMotor_set_speed tMotor_eMotor_set_speed
#define eMotor_stop      tMotor_eMotor_stop

/* iteration code (FOREACH_CELL) #_FEC_# */
#define FOREACH_CELL(i,p_cb)   \
    for( (i) = 0; (i) < tMotor_N_CELL; (i)++ ){ \
       (p_cb) = &tMotor_CB_tab[i];

#define END_FOREACH_CELL   }

/* CB initialize macro #_CIM_# */
#define INITIALIZE_CB(p_that)\
	(p_that)->motor = None;
#define SET_CB_INIB_POINTER(i,p_that)\
	(p_that)->_inib = &tMotor_INIB_tab[(i)];

#ifndef TOPPERS_MACRO_ONLY

/*  include inline header #_INL_# */
#include "tMotor_inline.h"

#endif /* TOPPERS_MACRO_ONLY */

#ifdef TOPPERS_CB_TYPE_ONLY

/* undef for inline #_UDF_# */
#undef VALID_IDX
#undef GET_CELLCB
#undef CELLCB
#undef CELLIDX
#undef tMotor_IDX
#undef FOREACH_CELL
#undef END_FOREACH_CELL
#undef INITIALIZE_CB
#undef SET_CB_INIB_POINTER
#undef ATTR_port
#undef tMotor_ATTR_port
#undef tMotor_GET_port
#undef VAR_motor
#undef VAR_motor
#undef tMotor_VAR_motor
#undef tMotor_GET_motor
#undef tMotor_SET_motor
#undef tMotor_cPowerdown_powerdown
#undef cPowerdown_powerdown
#undef eMotor_set_motor_ref
#undef eMotor_setup
#undef eMotor_set_speed
#undef eMotor_stop
#endif /* TOPPERS_CB_TYPE_ONLY */

#endif /* tMotor_TECSGENH */
