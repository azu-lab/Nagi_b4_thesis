TOPPERS/FMP3, TOPPERS/HRMP3 のクラスへの対応
                                            2021. 3.14 大山
1. 概要

TOPPERS/FMP3, TOPPERS/HRMP3 におけるクラスは、マルチコアシステム
にておいて、セルとプロセッサの対応づけを制御するものである。ある
処理単位やセルが特定のプロセッサで動作する、あるいは、どのプロセッ
サでも動作できることを指定する。
特定のプロセッサで動作させる理由としては、CPU負荷を制御する場合や、
IO装置やメモリなどの資源が特定のプロセッサからのみアクセス可能な
ようにハードウェアが構成されているため特定のプロセッサで動作させ
なければならない場合が考えられる。

TECS のクラスは、TOPPERS/FMP3, TOPPERS/HRMP3 のクラスに対応するも
のである。TECS ジェネレータは、プラグイン FMP3Plugin, HRMP3Plugin
によりtecsgen.cfg 等のコンフィグレーションファイルに静的APIを生成
するが、その際にクラスの指定を行う。TOPPERS/HRMP3 においては
ATT_MOD によるクラスへのメモリ割付も行う。

2. クラスの定義

クラス定義は、有効なクラス名と、その特性を定義するものである。シス
テムのプロセッサ（コア）数や、メモリ構成に合わせてクラスを定義する
必要があり、FMP3, HRMP3 カーネルのターゲット依存部にて、定義する。

クラス定義は JSON 形式を用いて、TECS CDL 内に __tool_info__ 文と
して記述する。以下に記述例を示す。この例では CLS_PRC1,
CLS_ALL_PRC1, CLS_CLUSTER2_CORE3 がある。

FMP3, HRMP3 の実装例では class_def.cdf としてターゲット依存部に置
かれている。これは TECS ジェネレータ tecsgen に CDL ファイルの一
部として取り込むことができる。このため class_def.cdf は
target_class.cdl から import される。

    __tool_info__ ("HRMP_class_def") {
        "class_def" : [
            {
                "type"        : "class",
                "class_name"  : "CLS_PRC1",
                "processorID" : 1,
                "locality"    : "only",
            },
            {
                "type"        : "class",
                "class_name"  : "CLS_ALL_PRC1",
                "processorID" : 1,
                "locality"    : "all"
            },
            {
                "type"        : "class",
                "class_name"  : "CLS_CLUSTER2_CORE3",
                "processorID" : 3,
                "assignableProcessorIDs" : [ 3, 4 ],
                "locality"    : "restricted"
            }
        ]
    }

上記の内、可変の要素は、class_name, processorID, 
assignableProcessorIDs, locality である。

指定可能なクラスは、ターゲットに依存している。普通、カーネル側で
定義されたクラスが指定可能となる。TECS では、クラスには、以下の特
性を持つことを仮定している。
 ・ローカリティ (locality)
 ・プロセッサID (processorID)
 ・割付可能プロセッサIDs (assignableProcessorIDs)

locality は、プロセッサとの結びつきの度合いを示す。"only"、
"restricted" または "all" を指定する。only, restricted は、そのク
ラスが指定されたリージョンに属するセルが、そのクラスの割付可能プ
ロセッサでのみ動作可能であることを表す。
all は、どのプロセッサでも動作可能であることを表す。

processorID は、処理単位のシステム起動時に割り付けるプロセッサ
を指定する。また、割付可能プロセッサIDs が省略された場合、割付可
能プロセッサである。

assignableProcessorIDs は、割付可能プロセッサの ID を配列で指定す
る。割付可能なプロセッサが一つだけの場合、assignableProcessorIDs
は省略可能である。割付可能プロセッサIDs の配列には、必ずプロセッ
サIDが含まれなければならない。ローカリティが all の場合、割付可能
processorIDs が指定されていたとしても無視される。

3. クラスリージョンの定義

クラスリージョンは、クラス指定子が指定されたリージョンである。また、
その子リージョンもクラスリージョンとなる。

以下は HRMP3 のターゲット依存部で定義されているリージョンの例であ
る。target_class.cdl にて定義される。ターゲット依存部のシリアルや、
システムログに必要となるドメインリージョン、クラスリージョンは、
ターゲット依存部において定義する必要がある。

    /*
    *  カーネルドメインのリージョン定義
    */
    [domain(HRMP, "kernel")]
    region rKernelDomain {
        // プロセッサ1でのみ動作可能
        [class(HRMP, "CLS_PRC1")]
        region rOnlyProcessor1{};

        // いずれのプロセッサでも動作可能、マイグレート可能
        // 起動時プロセッサは１
        [class(HRMP, "CLS_ALL_PRC1"l)]
        region rAllProcessor1 {};
    };

class 指定子は、2つの引数を持つ。1つ目はクラスのタイプである。
FMP (FMP3用), HRMP (HRMP3用) などである。2つ目は、クラス名である。

HRMP3 において、クラスリージョンとドメインリージョンは、一方が、
他方の子リージョンとなることが可能である。

ドメインリージョンについて、ユーザードメインの場合、リージョンの
グローバル名(*)がユーザードメインのドメイン名となる（これは、当初
よりの仕様である）。このため、異なるクラスの親リージョンを持つ場合、
ユーザードメイン指定された子リージョンは、必ず異なるユーザードメ
インとなる。

一方、クラス名はクラス指定子で指定された名前となるため、入れ子関
係に影響しない。このため、TECS CDL においては、ドメインリージョン
を親リージョンとして、クラスリージョンを子リージョンとする方が、
より適切である。

(*) グローバル名は、ルートリージョンから当該リージョンに至るまで
の各リージョンの名前を '_' でつないだもの。

4. クラス呼出し制限(restrict_class) 指定子

クラスリージョン間の結合について、デフォルトで制限はない。ある受
け口について特定のプロセッサからの呼出しに制限したい場合、クラス
呼出し制限指定子により制限することができる。これは、コンポーネン
トが特定のプロセッサからのみアクセス可能な資源を操作することが想
定される。

クラス呼出し制限指定子 restrict_class は、受け口関数が呼び出され
る場合のプロセッサを制限するものである。クラス制限指定子は、セル
に指定する。以下に記述例を示す。

  [class(HRMP3,"CLS_PRC2_ALL")]
  region rProcessor2Migratable {
    [restrict_class(eEntry=CLS_PRC2)]  // 受け口の呼出し制限
    cell tCellDev {};
  };

この例ではクラス CLS_PRC2 に対応付けられたプロセッサからのみ呼び
出すことができる。

（補足）
受け口関数が動作するプロセッサを制限する必要があるのは、特定のプ
ロセッサからしかアクセスできない資源にアクセスする場合である。こ
こで資源とは、メモリや IO デバイスである。このようなアクセス制限
は、ハードウェアの構成方法に依存しており、ソフトウェアはハードウェ
ア仕様に従って設計する必要がある。クラス制限指定子は、このような
状況に対応するものである。

4. 結合ルール

クラス呼出し制限指定子により、クラスが制限されている受け口への結
合には、選択的結合が使用される。
選択的結合とは、呼出しプロセッサを検査し、クラス呼出し制限されて
いるクラスに対応づけられたプロセッサである場合には、直接呼出しを
行い、そうでない場合には、トランスペアレント RPC チャンネルを介し
た接続となる。

ハードウェア、およびソフトウェアの構成によっては、オペイク RPC に
より接続する必要がある（メモリ透過性がない）場合がありえるが、選
択的結合では、これには対応しない（警告もしない）。
ポインタ渡しされるメモリ領域が、特定のプロセッサからのみアクセス
可能か、どのプロセッサからもアクセス可能かは、クラスの定義情報か
らだけではわからないためである。セルタイプコードの書き方にも依存
する。このような用法については、組上げ時の注意点となる。

HRMP3 では、ドメインによる呼出し規則が先に適用される。その後必要
に応じて、クラスの結合規則が適用される。クラス呼出し制限されている
場合、ドメインによる呼出し規則と合わせて、以下のような結合となる。

             (呼び先ドメイン)
(呼び元　 | 同一ユーザー  異なるユーザー  カーネル
ドメイン) | ドメイン      ドメイン        ドメイン
---------|---------------------------------------------
ユーザー  | 選択的結合    オペイクRPC     拡張サービス
ドメイン  |                          　 コール+選択的結合
         |
カーネル  | オペイクRPC   オペイクRPC    選択的結合   
ドメイン  |

5. ATT_MOD の生成

HRMP3 では、tecsgen.cfg および各ドメイン、クラスごとの cfg ファイ
ルに ATT_MOD を出力する。FMP3 は現時点で ATT_MOD に対応していない
ため、出力しない。

以下のようにクラスリージョンとドメインリージョンの関係を定義する。
   (1) domain_root ⊃ class_root
       クラスリージョンは、ドメインリージョンに含まれる。
       クラスリージョンは、ドメインリージョンの子リージョンである。
   (2) domain_root ⊂ class_root
       ドメインリージョンは、クラスリージョンに含まれる。
       ドメインリージョンは、クラスリージョンの子リージョンである。
   (3) domain_root ＝ class_root 
        これは、ない(リージョンに class と domain を同時に指定できない)

この場合、以下のように ATT_MOD が出力される。
   (1) domain_root ⊃ class_root
     クラスリージョンごとに、ATT_MOD 出力する
   (2) domain_root ⊂ class_root
     ドメインリージョンごとに、出力する
   (3) domain_root ＝ class_root
     (1) と同じに扱う(実際には、これはない)

備忘) ノードリージョンは、必ず OutOfDomain かつ global(OutOfClass) である。
     node と domain や class を同時に指定することはできない。
■
